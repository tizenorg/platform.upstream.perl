--- cpan/Time-HiRes/t/alarm.t.orig	2012-05-23 12:33:36.000000000 +0000
+++ cpan/Time-HiRes/t/alarm.t	2012-05-23 12:34:12.000000000 +0000
@@ -7,7 +7,7 @@ BEGIN { require_ok "Time::HiRes"; }
 
 use Config;
 
-my $limit = 0.25; # 25% is acceptable slosh for testing timers
+my $limit = 0.60; # 25% is acceptable slosh for testing timers
 
 my $xdefine = ''; 
 if (open(XDEFINE, "xdefine")) {
--- cpan/Time-HiRes/t/clock.t.orig	2012-05-23 12:33:41.000000000 +0000
+++ cpan/Time-HiRes/t/clock.t	2012-05-23 12:34:27.000000000 +0000
@@ -28,7 +28,7 @@ note sprintf "have_clock           = %d"
 # completes fine with (say) 30% slosh, and fail otherwise.  If you do that,
 # consider changing over to test.pl at the same time.
 # --A.D., Nov 27, 2001
-my $limit = 0.25; # 25% is acceptable slosh for testing timers
+my $limit = 0.60; # 25% is acceptable slosh for testing timers
 
 SKIP: {
     skip "no clock_gettime", 1
--- cpan/Time-HiRes/t/itimer.t.orig	2012-05-23 12:33:46.000000000 +0000
+++ cpan/Time-HiRes/t/itimer.t	2012-05-23 12:34:31.000000000 +0000
@@ -28,7 +28,7 @@ BEGIN {
 use Test::More 0.82 tests => 2;
 use t::Watchdog;
 
-my $limit = 0.25; # 25% is acceptable slosh for testing timers
+my $limit = 0.60; # 25% is acceptable slosh for testing timers
 
 my $i = 3;
 my $r = [Time::HiRes::gettimeofday()];
--- cpan/Time-HiRes/t/stat.t.orig	2012-05-23 12:33:51.000000000 +0000
+++ cpan/Time-HiRes/t/stat.t	2012-05-23 12:34:36.000000000 +0000
@@ -16,7 +16,7 @@ BEGIN {
 use Test::More 0.82 tests => 16;
 use t::Watchdog;
 
-my $limit = 0.25; # 25% is acceptable slosh for testing timers
+my $limit = 0.60; # 25% is acceptable slosh for testing timers
 
 my @atime;
 my @mtime;
--- cpan/Time-HiRes/t/usleep.t.orig	2012-05-23 12:33:56.000000000 +0000
+++ cpan/Time-HiRes/t/usleep.t	2012-05-23 12:34:40.000000000 +0000
@@ -15,7 +15,7 @@ eval { Time::HiRes::usleep(-2) };
 like $@, qr/::usleep\(-2\): negative time not invented yet/,
 	"negative time error";
 
-my $limit = 0.25; # 25% is acceptable slosh for testing timers
+my $limit = 0.60; # 25% is acceptable slosh for testing timers
 
 my $one = CORE::time;
 Time::HiRes::usleep(10_000);
